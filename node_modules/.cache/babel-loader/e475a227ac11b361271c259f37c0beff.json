{"ast":null,"code":"import _classCallCheck from \"D:\\\\work\\\\vscode-workspace\\\\zy-home\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\work\\\\vscode-workspace\\\\zy-home\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\work\\\\vscode-workspace\\\\zy-home\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\work\\\\vscode-workspace\\\\zy-home\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\work\\\\vscode-workspace\\\\zy-home\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\work\\\\vscode-workspace\\\\zy-home\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\work\\\\vscode-workspace\\\\zy-home\\\\src\\\\zyhome\\\\product\\\\product.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Pagecomponent from '../page/components/Pagecomponent';\nimport './product.css';\n\nvar Product =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Product, _Component);\n\n  function Product(props) {\n    var _this2;\n\n    _classCallCheck(this, Product);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Product).call(this, props));\n\n    _this2.getProductType = function () {\n      var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n      axios.get('http://127.0.0.1:8081/ZYHOME/product/getProductType').then(function (response) {\n        _this.setState({\n          producttypes: response.data\n        });\n      }).catch(function (error) {\n        alert(\"查询产品类型出错:\" + error);\n      });\n    };\n\n    _this2.getProductList = function (productType, pageNum) {\n      var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n      if (productType == \"\" || productType == null || productType == \"undefined\") {\n        productType = _this.state.producttype;\n      }\n\n      alert(pageNum);\n      axios.get('http://127.0.0.1:8081/ZYHOME/product/getProductList', {\n        params: {\n          productType: productType,\n          page: pageNum\n        }\n      }).then(function (response) {\n        _this.setState({\n          products: response.data.products,\n          page: response.data,\n          producttype: productType,\n          pageNum: pageNum,\n          totalPage: response.data.pages\n        });\n\n        console.log(_this.state.totalPage);\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(\"获取产品列表出错：\" + error);\n      });\n    };\n\n    _this2.getProductInfo = function () {\n      var _this = _assertThisInitialized(_assertThisInitialized(_this2));\n\n      axios.get('http://127.0.0.1:8081/ZYHOME/product/getProductInfoById').then(function (response) {\n        _this.setState({\n          product: response.data\n        });\n      }).catch(function (error) {\n        console.log(\"获取产品详情出错：\" + error);\n      });\n    };\n\n    _this2.getProductDesc = function (a, b) {};\n\n    _this2.state = {\n      product: {},\n      products: [],\n      producttype: null,\n      producttypes: [],\n      totalPage: 1,\n      //总页数\n      pageNum: 1,\n      //当前页\n      groupCount: 5,\n      //页码分组，显示7个页码，其余用省略号显示\n      startPage: 1 //分组开始页码\n      // this.getCurrentPage = this.getCurrentPage.bind(this)\n\n    };\n    return _this2;\n  } //  进入该组件时执行\n\n\n  _createClass(Product, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      var _this = this; //先存一下this，以防使用箭头函数this会指向我们不希望它所指向的对象。\n\n\n      _this.getProductType();\n\n      _this.getProductList(); // _this.getProductDesc(\"hello \",\" world\");\n\n    } // 获取产品分类\n\n  }, {\n    key: \"createPage\",\n    // 生成页码\n    value: function createPage() {\n      var _this$state = this.state,\n          pageNum = _this$state.pageNum,\n          groupCount = _this$state.groupCount,\n          startPage = _this$state.startPage,\n          totalPage = _this$state.totalPage;\n      var pages = []; //上一页\n\n      pages.push(React.createElement(\"li\", {\n        className: pageNum === 1 ? \"nomore\" : null,\n        onClick: this.prePageHandeler.bind(this),\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"\\u4E0A\\u4E00\\u9875\"));\n\n      if (totalPage <= 10) {\n        /*总页码小于等于10时，全部显示出来*/\n        for (var i = 1; i <= totalPage; i++) {\n          pages.push(React.createElement(\"li\", {\n            key: i,\n            onClick: this.pageClick.bind(this, i),\n            className: pageNum === i ? \"activePage\" : null,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, i));\n        }\n      } else {\n        /*总页码大于10时，部分显示*/\n        //第一页\n        pages.push(React.createElement(\"li\", {\n          className: pageNum === 1 ? \"activePage\" : null,\n          key: 1,\n          onClick: this.pageClick.bind(this, 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"1\"));\n        var pageLength = 0;\n\n        if (groupCount + startPage > totalPage) {\n          pageLength = totalPage;\n        } else {\n          pageLength = groupCount + startPage;\n        } //前面省略号(当当前页码比分组的页码大时显示省略号)\n\n\n        if (pageNum >= groupCount) {\n          pages.push(React.createElement(\"li\", {\n            className: \"\",\n            key: -1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, \"\\xB7\\xB7\\xB7\"));\n        } //非第一页和最后一页显示\n\n\n        for (var _i = startPage; _i < pageLength; _i++) {\n          if (_i <= totalPage - 1 && _i > 1) {\n            pages.push(React.createElement(\"li\", {\n              className: pageNum === _i ? \"activePage\" : null,\n              key: _i,\n              onClick: this.pageClick.bind(this, _i),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }, _i));\n          }\n        } //后面省略号\n\n\n        if (totalPage - startPage >= groupCount + 1) {\n          pages.push(React.createElement(\"li\", {\n            className: \"\",\n            key: -2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"\\xB7\\xB7\\xB7\"));\n        } //最后一页\n\n\n        pages.push(React.createElement(\"li\", {\n          className: pageNum === totalPage ? \"activePage\" : null,\n          key: totalPage,\n          onClick: this.pageClick.bind(this, totalPage),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, totalPage));\n      } //下一页\n\n\n      pages.push(React.createElement(\"li\", {\n        className: pageNum === totalPage ? \"nomore\" : null,\n        onClick: this.nextPageHandeler.bind(this),\n        key: totalPage + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"\\u4E0B\\u4E00\\u9875\"));\n      return pages;\n    } //页码点击\n\n  }, {\n    key: \"pageClick\",\n    value: function pageClick(currentPage) {\n      var groupCount = this.state.groupCount;\n      var getCurrentPage = this.props.pageCallbackFn; //当 当前页码 大于 分组的页码 时，使 当前页 前面 显示 两个页码\n\n      if (currentPage >= groupCount) {\n        this.setState({\n          startPage: currentPage - 2\n        });\n      }\n\n      if (currentPage < groupCount) {\n        this.setState({\n          startPage: 1\n        });\n      } //第一页时重新设置分组的起始页\n\n\n      if (currentPage === 1) {\n        this.setState({\n          startPage: 1\n        });\n      }\n\n      this.setState({\n        currentPage: currentPage\n      }); // alert(currentPage);\n      //将当前页码返回父组件\n\n      this.getProductList(null, currentPage);\n    } //上一页事件\n\n  }, {\n    key: \"prePageHandeler\",\n    value: function prePageHandeler() {\n      var pageNum = this.state.pageNum;\n\n      if (--pageNum === 0) {\n        return false;\n      }\n\n      this.pageClick(pageNum);\n    } //下一页事件\n\n  }, {\n    key: \"nextPageHandeler\",\n    value: function nextPageHandeler() {\n      var _this$state2 = this.state,\n          pageNum = _this$state2.pageNum,\n          totalPage = _this$state2.totalPage; // const {totalPage} = this.props.pageConfig;\n\n      if (++pageNum > totalPage) {\n        return false;\n      }\n\n      this.pageClick(pageNum);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    //  退出该组件时执行\n    value: function componentWillUnmount() {\n      var _this = this;\n\n      console.log(_this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var imgurl = require(\"./imgs/1.jpg\");\n\n      var pageList = this.createPage();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"product-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, this.state.producttypes.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.typeno,\n          onClick: _this3.getProductList.bind(_this3, item.typeno, \"\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, item.typename));\n      }))), React.createElement(\"div\", {\n        className: \"product-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pro-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, this.state.products.map(function (item) {\n        return (\n          /* 循环输出 */\n          React.createElement(\"li\", {\n            key: item.productno,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: \"/ProductInfo\",\n              state: {\n                productid: item.productno\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"pro-img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: imgurl,\n            alt: \"\\u4EA7\\u54C1\\u7167\\u7247\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          })), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }, item.productname), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, item.productdesc)))\n        );\n      }))), React.createElement(\"div\", {\n        className: \"pro-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"page-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, pageList))));\n    }\n  }]);\n\n  return Product;\n}(Component);\n\nexport default Product;","map":{"version":3,"sources":["D:\\work\\vscode-workspace\\zy-home\\src\\zyhome\\product\\product.js"],"names":["React","Component","axios","HashRouter","Router","Route","Link","Pagecomponent","Product","props","getProductType","_this","get","then","response","setState","producttypes","data","catch","error","alert","getProductList","productType","pageNum","state","producttype","params","page","products","totalPage","pages","console","log","getProductInfo","product","getProductDesc","a","b","groupCount","startPage","push","prePageHandeler","bind","i","pageClick","pageLength","nextPageHandeler","currentPage","getCurrentPage","pageCallbackFn","imgurl","require","pageList","createPage","map","item","typeno","typename","productno","pathname","productid","productname","productdesc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { HashRouter as Router,Route } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Pagecomponent from '../page/components/Pagecomponent';\r\n\r\nimport './product.css';\r\n\r\nclass Product extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            product : {},\r\n            products : [],\r\n            producttype : null,\r\n            producttypes : [],\r\n            totalPage : 1,  //总页数\r\n            pageNum : 1,    //当前页\r\n            groupCount: 5, //页码分组，显示7个页码，其余用省略号显示\r\n            startPage: 1,  //分组开始页码\r\n        }\r\n        // this.getCurrentPage = this.getCurrentPage.bind(this)\r\n    }\r\n    \r\n    //  进入该组件时执行\r\n    componentDidMount(props) {\r\n        const _this = this; //先存一下this，以防使用箭头函数this会指向我们不希望它所指向的对象。\r\n        _this.getProductType();\r\n        _this.getProductList();\r\n        // _this.getProductDesc(\"hello \",\" world\");\r\n    }\r\n    \r\n    // 获取产品分类\r\n    getProductType =() => {\r\n        const _this = this;\r\n        axios.get('http://127.0.0.1:8081/ZYHOME/product/getProductType')\r\n        .then(function (response) {\r\n            _this.setState({\r\n                producttypes:response.data,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            alert(\"查询产品类型出错:\"+error);\r\n        });\r\n    }\r\n\r\n    // 获取产品列表\r\n    getProductList =(productType,pageNum) => {\r\n        const _this = this;\r\n        if(productType == \"\" || productType == null || productType == \"undefined\"){\r\n            productType = _this.state.producttype;\r\n        }\r\n        alert(pageNum);\r\n        axios.get('http://127.0.0.1:8081/ZYHOME/product/getProductList',{\r\n            params :{\r\n                productType: productType,\r\n                page: pageNum\r\n            }\r\n        })\r\n        .then(function (response){\r\n            _this.setState({\r\n                products:response.data.products,\r\n                page:response.data,\r\n                producttype:productType,\r\n                pageNum:pageNum,\r\n                totalPage:response.data.pages,\r\n            })\r\n            console.log(_this.state.totalPage);\r\n            console.log(response.data);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(\"获取产品列表出错：\"+error);\r\n        });\r\n    }\r\n\r\n    // 获取产品详情\r\n    getProductInfo =() => {\r\n        const _this = this;\r\n        axios.get('http://127.0.0.1:8081/ZYHOME/product/getProductInfoById')\r\n        .then(function (response){\r\n            _this.setState({\r\n                product:response.data,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(\"获取产品详情出错：\"+error)\r\n        });\r\n    }\r\n\r\n    // 生成页码\r\n    createPage() {\r\n        const {pageNum, groupCount, startPage,totalPage} = this.state;\r\n        let pages = []\r\n        //上一页\r\n        pages.push(<li className={pageNum === 1 ? \"nomore\" : null} onClick={this.prePageHandeler.bind(this)}\r\n                       key={0}>\r\n            上一页</li>)\r\n\r\n        if (totalPage <= 10) {\r\n            /*总页码小于等于10时，全部显示出来*/\r\n            for (let i = 1; i <= totalPage; i++) {\r\n                pages.push(<li key={i} onClick={this.pageClick.bind(this, i)}\r\n                               className={pageNum === i ? \"activePage\" : null}>{i}</li>)\r\n            }\r\n        } else {\r\n            /*总页码大于10时，部分显示*/\r\n\r\n            //第一页\r\n            pages.push(<li className={pageNum === 1 ? \"activePage\" : null} key={1}\r\n                           onClick={this.pageClick.bind(this, 1)}>1</li>)\r\n\r\n            let pageLength = 0;\r\n            if (groupCount + startPage > totalPage) {\r\n                pageLength = totalPage\r\n            } else {\r\n                pageLength = groupCount + startPage;\r\n            }\r\n            //前面省略号(当当前页码比分组的页码大时显示省略号)\r\n            if (pageNum >= groupCount) {\r\n                pages.push(<li className=\"\" key={-1}>···</li>)\r\n            }\r\n            //非第一页和最后一页显示\r\n            for (let i = startPage; i < pageLength; i++) {\r\n                if (i <= totalPage - 1 && i > 1) {\r\n                    pages.push(<li className={pageNum === i ? \"activePage\" : null} key={i}\r\n                                   onClick={this.pageClick.bind(this, i)}>{i}</li>)\r\n                }\r\n            }\r\n            //后面省略号\r\n            if (totalPage - startPage >= groupCount + 1) {\r\n                pages.push(<li className=\"\" key={-2}>···</li>)\r\n            }\r\n            //最后一页\r\n            pages.push(<li className={pageNum === totalPage ? \"activePage\" : null} key={totalPage}\r\n                           onClick={this.pageClick.bind(this, totalPage)}>{totalPage}</li>)\r\n        }\r\n        //下一页\r\n        pages.push(<li className={pageNum === totalPage ? \"nomore\" : null}\r\n                       onClick={this.nextPageHandeler.bind(this)}\r\n                       key={totalPage + 1}>下一页</li>)\r\n        return pages;\r\n    }\r\n\r\n    //页码点击\r\n    pageClick(currentPage) {\r\n        const {groupCount} = this.state\r\n        const getCurrentPage = this.props.pageCallbackFn;\r\n        //当 当前页码 大于 分组的页码 时，使 当前页 前面 显示 两个页码\r\n        if (currentPage >= groupCount) {\r\n            this.setState({\r\n                startPage: currentPage - 2,\r\n            })\r\n        }\r\n        if (currentPage < groupCount) {\r\n            this.setState({\r\n                startPage: 1,\r\n            })\r\n        }\r\n        //第一页时重新设置分组的起始页\r\n        if (currentPage === 1) {\r\n            this.setState({\r\n                startPage: 1,\r\n            })\r\n        }\r\n        this.setState({\r\n            currentPage\r\n        })\r\n        // alert(currentPage);\r\n        //将当前页码返回父组件\r\n        this.getProductList(null,currentPage)\r\n    }\r\n\r\n    //上一页事件\r\n    prePageHandeler() {\r\n        let {pageNum} = this.state;\r\n        if (--pageNum === 0) {\r\n            return false\r\n        }\r\n        this.pageClick(pageNum)\r\n    }\r\n\r\n    //下一页事件\r\n    nextPageHandeler() {\r\n        let {pageNum,totalPage} = this.state;\r\n       // const {totalPage} = this.props.pageConfig;\r\n        if (++pageNum > totalPage) {\r\n            return false\r\n        }\r\n        this.pageClick(pageNum)\r\n    }\r\n\r\n    getProductDesc =(a,b) => {\r\n    }\r\n    \r\n    //  退出该组件时执行\r\n    componentWillUnmount() {\r\n        const _this = this;\r\n        console.log(_this.state);\r\n    }\r\n\r\n    render() {\r\n        const imgurl = require(\"./imgs/1.jpg\");\r\n        const pageList = this.createPage();\r\n        return (\r\n            <div>\r\n                <div className=\"product-type\">\r\n                    <ul>\r\n                        {\r\n                            this.state.producttypes.map(item => \r\n                                <li key={item.typeno} onClick={this.getProductList.bind(this,item.typeno,\"\")}>\r\n                                    <span>{item.typename}</span>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"product-list\">\r\n                    <div className=\"pro-item\">\r\n                        <ul>\r\n                            {\r\n                                this.state.products.map(item =>     /* 循环输出 */\r\n                                    <li key={item.productno}>\r\n                                        <Link to={\r\n                                            {\r\n                                                pathname:\"/ProductInfo\",\r\n                                                state:{productid:item.productno}\r\n                                            }\r\n                                            }>\r\n                                            <div className=\"pro-img\">\r\n                                                <img src={imgurl} alt=\"产品照片\"/>   \r\n                                            </div>\r\n                                            <h4>{item.productname}</h4>\r\n                                            <span>{item.productdesc}</span>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"pro-page\">\r\n                        <ul className=\"page-container\">\r\n                            {pageList}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;"]},"metadata":{},"sourceType":"module"}